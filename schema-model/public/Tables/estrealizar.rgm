table "public"."estrealizar" {
  primaryKey = {
    columns = [
      "nroestudio"
    ]
    name = "pk_estrealizar"
    objectType = primaryKey
  }
  owner = postgres
  columns = (
    column "nroestudio" {
      type = integer
      null = NOT NULL
    }
    column "codarea" {
      type = character varying(10)
    }
    column "codusu" {
      type = character varying(20)
    }
    column "nropaciente" {
      type = numeric(10,0)
    }
    column "fecha" {
      type = date
    }
    column "hora" {
      type = character varying(8)
    }
    column "codestudio" {
      type = character varying(10)
    }
    column "codservicior" {
      type = character varying(10)
    }
    column "codserviciod" {
      type = character varying(10)
    }
    column "coddiagnostico" {
      type = character varying(10)
    }
    column "estadoestu" {
      type = numeric(1,0)
    }
    column "fechatmues" {
      type = date
    }
    column "horatmues" {
      type = character varying(8)
    }
    column "codtmuestra" {
      type = character varying(10)
    }
    column "nromuestra" {
      type = character varying(10)
    }
    column "nroturno" {
      type = character varying(10)
    }
    column "codservact" {
      type = character varying(10)
    }
    column "validar" {
      type = numeric(1,0)
    }
    column "codorigen" {
      type = character varying(10)
    }
    column "codmedico" {
      type = character varying(10)
    }
    column "cod_dgvs" {
      type = bigint
    }
    column "nro_toma" {
      type = character varying(50)
    }
    column "orden_dgvs" {
      type = character varying(20)
    }
    column "nroficha" {
      type = integer
    }
    column "idlab" {
      type = integer
    }
    column "id_secciones_ficha" {
      type = integer
    }
    column "cod_dgvs2" {
      type = integer
    }
    column "hospitalizado" {
      type = character varying(2)
    }
    column "fallecido" {
      type = character varying(2)
    }
    column "traspasarhl" {
      type = boolean
    }
    column "nro_orden" {
      type = character varying(15)
    }
    column "codservicio" {
      type = character varying(10)
    }
  )
}

foreignKey "public"."estrealizar"."fk_estrealizar_codestudio" {
  columns = [
    "codestudio"
  ]
  referencedTable = "public"."estudios"
  referencedColumns = [
    "codestudio"
  ]
}

foreignKey "public"."estrealizar"."fk_estrealizar_codmedico" {
  columns = [
    "codmedico"
  ]
  referencedTable = "public"."medicos"
  referencedColumns = [
    "codmedico"
  ]
}

foreignKey "public"."estrealizar"."fk_estrealizar_codorigen" {
  columns = [
    "codorigen"
  ]
  referencedTable = "public"."origenpaciente"
  referencedColumns = [
    "codorigen"
  ]
}

foreignKey "public"."estrealizar"."fk_estrealizar_codtmuestra" {
  columns = [
    "codtmuestra"
    "codestudio"
  ]
  referencedTable = "public"."tmuestraestudio"
  referencedColumns = [
    "codtmuestra"
    "codestudio"
  ]
}

foreignKey "public"."estrealizar"."fk_estrealizar_codusu" {
  columns = [
    "codusu"
  ]
  referencedTable = "public"."usuarios"
  referencedColumns = [
    "codusu"
  ]
}

foreignKey "public"."estrealizar"."fk_estrealizar_nroorden" {
  columns = [
    "nro_orden"
  ]
  referencedTable = "public"."ordtrabajo"
  referencedColumns = [
    "nro_orden"
  ]
}

foreignKey "public"."estrealizar"."fk_estrealizar_nropaciente" {
  columns = [
    "nropaciente"
  ]
  referencedTable = "public"."paciente"
  referencedColumns = [
    "nropaciente"
  ]
}

foreignKey "public"."estrealizar"."fk_estrealizar_nroturno" {
  columns = [
    "nroturno"
    "codservicio"
  ]
  referencedTable = "public"."turnos"
  referencedColumns = [
    "nroturno"
    "codservicio"
  ]
}

index "public"."ind_estrealizar" {
  table = "public"."estrealizar"
  type = btree
  columns = <
    {
      definition = nro_orden
    }

    {
      definition = nropaciente
    }

    {
      definition = nroestudio
    }

  >
  isUnique = True
}

trigger "public"."estrealizar"."audit_log_trigger" {
  timing = BEFORE
  events = [
    DELETE
    UPDATE
    INSERT
  ]
  level = ROW
  function = public.audit_trigger
  functionArguments = [
  ]
  constraint = False
}

